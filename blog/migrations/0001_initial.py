# Generated by Django 4.2.24 on 2025-10-08 19:56

import django.contrib.postgres.indexes
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('avatar', models.URLField(blank=True, max_length=500)),
                ('twitter_handle', models.CharField(blank=True, max_length=50)),
                ('website', models.URLField(blank=True, max_length=500)),
                ('seo_title', models.CharField(blank=True, max_length=70)),
                ('seo_description', models.CharField(blank=True, max_length=160)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('seo_title', models.CharField(blank=True, max_length=70)),
                ('seo_description', models.CharField(blank=True, max_length=160)),
                ('seo_image', models.URLField(blank=True, max_length=500)),
                ('count_published_posts', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ImageAsset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.ImageField(upload_to='images/%Y/%m/')),
                ('alt_text', models.CharField(max_length=125)),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('format', models.CharField(default='webp', max_length=10)),
                ('responsive_set', models.JSONField(blank=True, default=dict)),
                ('lqip', models.TextField(blank=True)),
                ('og_image_url', models.URLField(blank=True, max_length=500)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('summary', models.CharField(max_length=320)),
                ('content_html', models.TextField()),
                ('content_markdown', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('scheduled', 'Scheduled'), ('archived', 'Archived')], db_index=True, default='draft', max_length=20)),
                ('published_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('allow_index', models.BooleanField(default=True)),
                ('reading_time', models.IntegerField(default=0)),
                ('word_count', models.IntegerField(default=0)),
                ('seo_title', models.CharField(blank=True, max_length=70)),
                ('seo_description', models.CharField(blank=True, max_length=160)),
                ('canonical_url', models.URLField(blank=True, max_length=500)),
                ('og_title', models.CharField(blank=True, max_length=70)),
                ('og_description', models.CharField(blank=True, max_length=200)),
                ('og_image', models.URLField(blank=True, max_length=500)),
                ('schema_org', models.JSONField(blank=True, default=dict)),
                ('legacy_urls', models.JSONField(blank=True, default=list)),
                ('product_references', models.JSONField(blank=True, default=list)),
                ('locale', models.CharField(default='en', max_length=5)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='posts', to='blog.author')),
                ('categories', models.ManyToManyField(blank=True, related_name='posts', to='blog.category')),
                ('featured_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='blog.imageasset')),
            ],
            options={
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Zaryab Leather Blog', max_length=100)),
                ('site_description', models.TextField(max_length=200)),
                ('site_url', models.URLField()),
                ('default_meta_image', models.URLField(max_length=500)),
                ('default_title_template', models.CharField(default='{title} â€” {site_name}', max_length=100)),
                ('default_description_template', models.CharField(blank=True, max_length=200)),
                ('robots_txt_content', models.TextField(default='User-agent: *\nAllow: /')),
                ('sitemap_index_url', models.URLField()),
                ('rss_feed_url', models.URLField()),
                ('google_site_verification', models.CharField(blank=True, max_length=100)),
                ('twitter_site', models.CharField(blank=True, max_length=50)),
                ('facebook_app_id', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('seo_title', models.CharField(blank=True, max_length=70)),
                ('seo_description', models.CharField(blank=True, max_length=160)),
                ('seo_image', models.URLField(blank=True, max_length=500)),
                ('count_published_posts', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['slug'], name='blog_tag_slug_915fc6_idx')],
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('verified', models.BooleanField(default=False)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-subscribed_at'],
                'indexes': [models.Index(fields=['email'], name='blog_subscr_email_5250c5_idx')],
            },
        ),
        migrations.CreateModel(
            name='SitemapGenerationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], db_index=True, default='pending', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_posts', models.IntegerField(default=0)),
                ('total_files', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('s3_urls', models.JSONField(blank=True, default=list)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', '-created_at'], name='blog_sitema_status_d731d4_idx')],
            },
        ),
        migrations.CreateModel(
            name='SEOMetadata',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_keywords', models.JSONField(blank=True, default=list)),
                ('twitter_card', models.CharField(default='summary_large_image', max_length=20)),
                ('twitter_creator', models.CharField(blank=True, max_length=50)),
                ('facebook_app_id', models.CharField(blank=True, max_length=50)),
                ('structured_data_extra', models.JSONField(blank=True, default=dict)),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seo_metadata', to='blog.post')),
            ],
            options={
                'verbose_name': 'SEO Metadata',
                'verbose_name_plural': 'SEO Metadata',
            },
        ),
        migrations.CreateModel(
            name='Redirect',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_path', models.CharField(db_index=True, max_length=500, unique=True)),
                ('to_url', models.URLField(max_length=500)),
                ('status_code', models.IntegerField(choices=[(301, '301 Permanent'), (302, '302 Temporary')], default=301)),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('reason', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['from_path', 'active'], name='blog_redire_from_pa_1485b8_idx')],
            },
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='posts', to='blog.tag'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('content', models.TextField(max_length=1000)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('spam', 'Spam')], db_index=True, default='pending', max_length=20)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['slug'], name='blog_catego_slug_fc0bb9_idx'),
        ),
        migrations.AddIndex(
            model_name='author',
            index=models.Index(fields=['slug'], name='blog_author_slug_5b1b82_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['slug'], name='blog_post_slug_cdb902_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['status', 'published_at'], name='blog_post_status_5b2843_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['-published_at'], name='blog_post_publish_2c9212_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=django.contrib.postgres.indexes.GinIndex(fields=['content_html'], name='post_content_gin_idx'),
        ),
        migrations.AddConstraint(
            model_name='post',
            constraint=models.UniqueConstraint(fields=('slug',), name='unique_post_slug'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['post', 'status'], name='blog_commen_post_id_651007_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['-created_at'], name='blog_commen_created_1f5393_idx'),
        ),
    ]
